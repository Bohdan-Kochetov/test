{"version":3,"sources":["store/reducer.ts","apiGoods.tsx","store/rootReducer.ts","store/main.ts","ProductDetalis.tsx","FormToAdd.tsx","App.tsx","index.tsx"],"names":["initialState","product","productToRender","select","productId","add","productFetchData","dispatch","url","fetch","then","response","ok","Error","json","result","type","generateProduct","length","arr","name","imageUrl","count","weight","id","size","width","height","comments","rootReducer","combineReducers","reducer","state","action","sort","a","b","localeCompare","filter","item","details","store","createStore","composeWithDevTools","applyMiddleware","thunk","ProductDetalis","useSelector","FormToAdd","useState","setName","setimageUrl","setCount","setWeight","setWidth","setHeight","useDispatch","className","required","value","onChange","event","target","placeholder","onClick","App","useEffect","map","Root","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30acd9e5.chunk.js","sourcesContent":["import { request } from '../apiGoods';\nimport { Product } from '../react-app-env';\n\nconst initialState = {\n  product: [],\n  productToRender: [],\n  select: 'select',\n  productId: 0,\n  add: false,\n};\n\nexport function productSuccess(product: any) {\n  return {\n    type: 'productSuccess',\n    product,\n  };\n}\n\nexport function productFetchData() {\n  return (dispatch : any) => request('product')\n    .then(result => dispatch(productSuccess(result)));\n}\n\nexport function selected(string: string) {\n  return string === 'count' ? {\n    type: 'filterByCount',\n  } : {\n    type: 'filterByAlphabet',\n  };\n}\n\nexport function chooseProductId(id: number) {\n  return {\n    type: 'choosenProduct',\n    productId: id,\n  };\n}\n\nfunction generateProduct(length: number, arr: any) {\n  const [name, imageUrl, count, weight, width, height] = arr;\n\n  return {\n    id: length + 1,\n    name,\n    imageUrl,\n    count,\n    size: {\n      width,\n      height,\n    },\n    weight: `${weight}g`,\n    comments: [],\n  };\n}\n\nexport function reducer(state = initialState, action: any) {\n  switch (action.type) {\n    case 'productSuccess':\n      return {\n        ...state,\n        product: action.product,\n        productToRender: action.product,\n      };\n    case 'filterByCount':\n      return {\n        ...state,\n        productToRender: state.product.sort((a: Product, b: Product) => a.count - b.count),\n      };\n    case 'filterByAlphabet':\n      return {\n        ...state,\n        productToRender: state.product\n          .sort((a: Product, b: Product) => a.name.localeCompare(b.name)),\n      };\n    case 'alphabetically':\n      return {\n        ...state,\n        select: 'alphabetically',\n      };\n    case 'count':\n      return {\n        ...state,\n        select: 'count',\n      };\n    case 'select':\n      return {\n        ...state,\n        select: 'select',\n      };\n    case 'choosenProduct':\n      return {\n        ...state,\n        productId: action.productId,\n      };\n    case 'add':\n      return {\n        ...state,\n        add: !state.add,\n      };\n    case 'delete':\n      return {\n        ...state,\n        product: state.product.filter((item: Product) => item.id !== action.id),\n        productToRender: state.product.filter((item: Product) => item.id !== action.id),\n      };\n    case 'addProduct':\n      return {\n        ...state,\n        product: [...state.product, generateProduct(state.product.length, action.details)],\n        productToRender: [...state.product, generateProduct(state.product.length, action.details)],\n      };\n    default:\n      return state;\n  }\n}\n","// eslint-disable-next-line\nconst API_URL = `http://localhost:3000/`;\n\nexport const request = (url: string) => {\n  const data = fetch(`${API_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n\n  return data;\n};\n","import { combineReducers } from 'redux';\nimport { reducer } from './reducer';\n\nexport const rootReducer = combineReducers({\n  reducer,\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { rootReducer } from './rootReducer';\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { State } from './react-app-env';\n\nexport const ProductDetalis: React.FC<{}> = () => {\n  const { productToRender, productId } = useSelector((state: State) => state.reducer);\n\n  return (\n    <div>\n      <h3>Details of Product</h3>\n      <div>{ `Name: ${(productToRender[productId - 1]).name}`}</div>\n      <div>{ `ID: ${(productToRender[productId - 1]).id}`}</div>\n      <div>{ `Count: ${(productToRender[productId - 1]).count}`}</div>\n      <div>\n        {\n          `Size: width-${(productToRender[productId - 1]).size.width}, height-${(productToRender[productId - 1]).size.height}`\n        }\n\n      </div>\n      <div>{ `Weight: ${(productToRender[productId - 1]).weight}`}</div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nexport const FormToAdd: React.FC = () => {\n  const [name, setName] = useState('');\n  const [imageUrl, setimageUrl] = useState('');\n  const [count, setCount] = useState(0);\n  const [weight, setWeight] = useState(0);\n  const [width, setWidth] = useState(0);\n  const [height, setHeight] = useState(0);\n  const dispatch = useDispatch();\n\n  const readyToAdd = () => {\n    return {\n      type: 'addProduct',\n      details: [name, imageUrl, count, weight, width, height],\n    };\n  };\n\n  return (\n    <form>\n      <div className=\"input\">\n        <div>\n          Name:\n          {' '}\n          <input\n            required\n            type=\"text\"\n            value={name}\n            onChange={event => setName(event.target.value)}\n          />\n\n        </div>\n        <div>\n          imageUrl :\n          <input\n            required\n            type=\"text\"\n            value={imageUrl}\n            onChange={event => setimageUrl(event.target.value)}\n          />\n\n        </div>\n        <div>\n          Count:\n          {' '}\n          <input\n            required\n            type=\"number\"\n            placeholder=\"Count\"\n            value={count}\n            onChange={event => setCount(+event.target.value)}\n          />\n\n        </div>\n        <div>\n          Weight:\n          <input\n            required\n            type=\"number\"\n            value={weight}\n            onChange={event => setWeight(+event.target.value)}\n          />\n        </div>\n        <div>\n          Width:\n          <input\n            required\n            type=\"number\"\n            value={width}\n            onChange={event => setWidth(+event.target.value)}\n          />\n\n        </div>\n        <div>\n          Height:\n          <input\n            required\n            type=\"number\"\n            value={height}\n            onChange={event => setHeight(+event.target.value)}\n          />\n        </div>\n      </div>\n\n      <button\n        type=\"button\"\n        onClick={() => {\n          dispatch(readyToAdd());\n          setName('');\n          setimageUrl('');\n          setCount(0);\n          setWeight(0);\n          setWidth(0);\n          setHeight(0);\n        }}\n      >\n        Confitm\n\n      </button>\n      <button\n        type=\"button\"\n        onClick={() => {\n          dispatch({\n            type: 'add',\n            add: true,\n          });\n        }}\n      >\n        Cancel\n\n      </button>\n    </form>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { productFetchData, selected, chooseProductId } from './store/reducer';\nimport { ProductDetalis } from './ProductDetalis';\nimport { FormToAdd } from './FormToAdd';\nimport './App.scss';\nimport { State } from './react-app-env';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch();\n  const {\n    productToRender, select, productId, add,\n  } = useSelector((state: State) => state.reducer);\n\n  useEffect(() => {\n    dispatch(productFetchData());\n  }, [select]);\n\n  return (\n    <div className=\"App\">\n      <h1>List of products</h1>\n      <select\n        value={select}\n        onChange={event => {\n          dispatch(selected(event.target.value));\n          dispatch({\n            type: event.target.value,\n          });\n        }}\n      >\n        <option value=\"select\">Choose</option>\n        <option value=\"alphabetically\">Alphabetically</option>\n        <option value=\"count\">By count</option>\n      </select>\n      <ul>\n        {productToRender.map((item: any) => {\n          return (\n            <>\n              <li key={item.id}>\n                {item.name}\n                <button\n                  type=\"button\"\n                  onClick={() => dispatch(chooseProductId(item.id))}\n                >\n                  Show details\n\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => dispatch({\n                    type: 'delete',\n                    id: item.id,\n                  })}\n                >\n                  Delete\n\n                </button>\n              </li>\n            </>\n          );\n        })}\n      </ul>\n      <div>\n        <button\n          type=\"button\"\n          onClick={() => dispatch({\n            type: 'add',\n            add: true,\n          })}\n        >\n          Add Product\n\n        </button>\n      </div>\n\n      {add && (\n        <div>\n          <h2>Give me some informarion, and then I can add a product  :)</h2>\n          <FormToAdd />\n        </div>\n      )}\n      {productId && (\n        <ProductDetalis />\n      )}\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './store/main';\n\nimport App from './App';\n\nconst Root: React.FC = () => (\n  <Provider store={store}>\n    <App />\n  </Provider>\n\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}